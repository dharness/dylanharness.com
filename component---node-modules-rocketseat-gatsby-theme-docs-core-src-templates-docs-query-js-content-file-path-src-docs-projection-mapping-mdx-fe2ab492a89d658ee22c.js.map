{"version":3,"file":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js-content-file-path-src-docs-projection-mapping-mdx-fe2ab492a89d658ee22c.js","mappings":"0NAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,sCAAuC,KAAMG,EAAAA,cAAoBC,EAAAA,EAAY,CACrKC,QAAS,cACP,KAAMF,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,qKACvH,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWX,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCVe,SAASY,EAAiBZ,GACvC,OAAOO,EAAAA,cAAoBM,EAAAA,EAAeb,EAAOO,EAAAA,cAAoBO,EAAqBd,GAC5F,CAHAa,EAAAA,C","sources":["webpack://gatsby-starter-rocketdocs/./src/docs/projection-mapping.mdx","webpack://gatsby-starter-rocketdocs/./node_modules/@rocketseat/gatsby-theme-docs-core/src/templates/docs-query.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport VimeoVideo from \"../components/VimeoVideo\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Simulate 3D worlds with 2D assets.\"), \"\\n\", React.createElement(VimeoVideo, {\n    vimeoId: \"851113003\"\n  }), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"I used projection mapping as a technique for simulating 3D worlds with 2D assets. The scene was drawn first in 2D and a reference plane was determined with fSpy.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/dylan/dev/dylanharness.com/software-website/src/docs/projection-mapping.mdx\";\nimport {graphql} from 'gatsby';\nimport DocsComponent from '../components/Docs';\nDocsComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocsComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        description\n        image\n        disableTableOfContents\n      }\n      headings {\n        depth\n        value\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","VimeoVideo","vimeoId","wrapper","MDXLayout","GatsbyMDXWrapper","DocsComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}